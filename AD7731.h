/*
Copyright (C) 2016 Wouter Deconinck

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/* AD7731

Arduino library for the Analog Device AD7731 6-channel 24-bit ADC chip

http://www.analog.com/en/products/analog-to-digital-converters/ad-converters/ad7731.html

Author:       Wouter Deconinck
Contributors: Lisa Oswald

*/

#ifndef AD7731_h
#define AD7731_h

#include "Arduino.h"
#include <SPI.h>


#define AD7731_READ_REGISTER_STATUS_W 0x10
#define AD7731_READ_REGISTER_STATUS_Y 0x20
#define AD7731_READ_REGISTER_STATUS_Z 0x30

#define AD7731_READ_REGISTER_DATA_W 0x11
#define AD7731_READ_REGISTER_DATA_Y 0x21
#define AD7731_READ_REGISTER_DATA_Z 0x30

#define AD7731_READ_REGISTER_MODE_W 0x12
#define AD7731_READ_REGISTER_MODE_Y 0x22
#define AD7731_READ_REGISTER_MODE_Z 0x30

#define AD7731_READ_REGISTER_FILTER_W 0x13
#define AD7731_READ_REGISTER_OFFSET_W 0x15
#define AD7731_READ_REGISTER_GAIN_W 0x16

#define AD7731_WRITE_REGISTER_COMM_Y 0x00
#define AD7731_WRITE_REGISTER_MODE_Y 0x02
#define AD7731_WRITE_REGISTER_FILTER_Y 0x03
#define AD7731_WRITE_REGISTER_OFFSET_Y 0x05
#define AD7731_WRITE_REGISTER_GAIN_Y 0x06

#define AD7731_FILTER_1KHZ_NONCHOP 0x1332

#define AD7731_MODE_BIPOLAR  b00000000
#define AD7731_MODE_UNIPOLAR b00010000

#define AD7731_MODE_DOUT_ENABLE  b00001000
#define AD7731_MODE_DOUT_D0_MASK b00000100
#define AD7731_MODE_DOUT_D1_MASK b00000010

#define AD7731_MODE_WORDLENGTH_16 b00000000
#define AD7731_MODE_WORDLENGTH_24 b00000001

#define AD7731_MODE_RANGE_BIPOLAR_10mV   b00000001
#define AD7731_MODE_RANGE_BIPOLAR_20mV   b00000001
#define AD7731_MODE_RANGE_BIPOLAR_40mV   b00000001
#define AD7731_MODE_RANGE_BIPOLAR_80mV   b00000001
#define AD7731_MODE_RANGE_BIPOLAR_160mV  b00000001
#define AD7731_MODE_RANGE_BIPOLAR_320mV  b00000001
#define AD7731_MODE_RANGE_BIPOLAR_640mV  b00000001
#define AD7731_MODE_RANGE_BIPOLAR_1280mV b00000001

#define AD7731_MODE_RANGE_UNIPOLAR_10mV   b00000001
#define AD7731_MODE_RANGE_UNIPOLAR_20mV   b00000001
#define AD7731_MODE_RANGE_UNIPOLAR_40mV   b00000001
#define AD7731_MODE_RANGE_UNIPOLAR_80mV   b00000001
#define AD7731_MODE_RANGE_UNIPOLAR_160mV  b00000001
#define AD7731_MODE_RANGE_UNIPOLAR_320mV  b00000001
#define AD7731_MODE_RANGE_UNIPOLAR_640mV  b00000001
#define AD7731_MODE_RANGE_UNIPOLAR_1280mV b00000001


#define AD7731_MODE_IDLE    b00000000
#define AD7731_MODE_STANDBY b01100000
#define AD7731_MODE_CONVERSION_CONTINUOUS b00100000
#define AD7731_MODE_CONVERSION_SINGLE     b01000000
#define AD7731_MODE_CALIBRATION_INTERNAL_ZERO_SCALE b10000000
#define AD7731_MODE_CALIBRATION_INTERNAL_FULL_SCALE b10100000
#define AD7731_MODE_CALIBRATION_SYSTEM_ZERO_SCALE   b11000000
#define AD7731_MODE_CALIBRATION_SYSTEM_FULL_SCALE   b11100000

class AD7731 {

  public:
    AD7731() { };
    ~AD7731()  { };
    
  private:
    
}

#endif // AD7731
